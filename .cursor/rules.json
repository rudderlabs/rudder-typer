{
  "rules": [
    {
      "name": "TypeScript Strict Mode",
      "description": "Enforce TypeScript strict mode for type safety",
      "pattern": "tsconfig.json",
      "message": "TypeScript strict mode should be enabled",
      "fix": {
        "compilerOptions": {
          "strict": true
        }
      }
    },
    {
      "name": "Schema Naming Convention",
      "description": "Ensure schema names follow PascalCase convention",
      "pattern": "**/*.schema.json",
      "message": "Schema names should be in PascalCase",
      "regex": "\"name\":\\s*\"[A-Z][a-zA-Z0-9]*\""
    },
    {
      "name": "Interface Naming",
      "description": "Ensure interfaces follow PascalCase convention",
      "pattern": "**/*.ts",
      "message": "Interface names should be in PascalCase",
      "regex": "interface\\s+[A-Z][a-zA-Z0-9]*"
    },
    {
      "name": "Type Documentation",
      "description": "Ensure all types and interfaces have JSDoc comments",
      "pattern": "**/*.ts",
      "message": "Types and interfaces should have JSDoc comments",
      "regex": "(interface|type)\\s+[A-Z][a-zA-Z0-9]*\\s*\\{",
      "context": {
        "before": "/\\*\\*\\s*\\n\\s*\\*\\s*@description\\s*.*\\n\\s*\\*/"
      }
    },
    {
      "name": "Generator Template Consistency",
      "description": "Ensure generator templates follow consistent naming",
      "pattern": "**/templates/*.hbs",
      "message": "Template files should use .hbs extension",
      "regex": "\\.hbs$"
    },
    {
      "name": "Required Schema Fields",
      "description": "Ensure required schema fields are present",
      "pattern": "**/*.schema.json",
      "message": "Schema must have required fields: name, type, properties",
      "regex": "\"name\"\\s*:\\s*\"[^\"]+\"\\s*,\\s*\"type\"\\s*:\\s*\"object\"\\s*,\\s*\"properties\"\\s*:\\s*\\{"
    },
    {
      "name": "Event Type Validation",
      "description": "Ensure event types are properly defined",
      "pattern": "**/*.ts",
      "message": "Event types should be properly typed",
      "regex": "type\\s+EventType\\s*=\\s*\"track\"\\s*\\|\\s*\"screen\"\\s*\\|\\s*\"page\"\\s*\\|\\s*\"identify\"\\s*\\|\\s*\"group\""
    },
    {
      "name": "Configuration File Format",
      "description": "Ensure configuration files use YAML format",
      "pattern": "ruddertyper.yml",
      "message": "Configuration should be in YAML format",
      "regex": "^---\\s*\\n"
    },
    {
      "name": "Advanced Validation Rules Documentation",
      "description": "Ensure proper documentation of advanced validation rules",
      "pattern": "**/*.ts",
      "message": "Advanced validation rules should be properly documented",
      "regex": "/\\*\\*\\s*\\n\\s*\\*\\s*Advanced Validation Rules:\\s*\\n",
      "context": {
        "after": "\\*\\s*These advanced rules ensure proper data validation and type safety\\.\\s*\\*/"
      }
    },
    {
      "name": "Violation Handler Type",
      "description": "Ensure proper typing of violation handlers",
      "pattern": "**/*.ts",
      "message": "Violation handlers should be properly typed",
      "regex": "type\\s+ViolationHandler\\s*=\\s*\\(\\s*message:\\s*PayloadMessage<Record<string, any>>,\\s*violations:\\s*any\\[\\]\\s*\\)\\s*=>\\s*void"
    },
    {
      "name": "RudderTyper Options Documentation",
      "description": "Ensure proper documentation of RudderTyper options",
      "pattern": "**/*.ts",
      "message": "RudderTyper options should be properly documented",
      "regex": "interface\\s+RudderTyperOptions\\s*\\{",
      "context": {
        "before": "/\\*\\*\\s*Options to customize the runtime behavior of a RudderTyper client\\.\\s*\\*/"
      }
    },
    {
      "name": "Event Message Types",
      "description": "Ensure proper typing of event messages",
      "pattern": "**/*.ts",
      "message": "Event messages should be properly typed",
      "regex": "type\\s+(Track|Page|Screen|Identify|Group)Message<[^>]+>\\s*=\\s*\\{"
    },
    {
      "name": "Prettier Configuration",
      "description": "Ensure consistent code formatting",
      "pattern": ".prettierrc.json",
      "message": "Prettier configuration should be consistent",
      "fix": {
        "trailingComma": "all",
        "tabWidth": 2,
        "semi": true,
        "singleQuote": true,
        "printWidth": 100,
        "useTabs": false
      }
    },
    {
      "name": "Git Ignore Patterns",
      "description": "Ensure proper git ignore patterns",
      "pattern": ".gitignore",
      "message": "Git ignore patterns should be comprehensive",
      "regex": "^(#|\\s*$|node_modules/|dist/|coverage/|.DS_Store|.env|.vscode|.idea)"
    }
  ]
}
