/**
 * {{autogeneratedFileWarning}}
 */
package com.rudderstack.ruddertyper.generated;

import com.rudderstack.android.sdk.core.RudderOption;
import java.util.*;
import java.lang.String;
import androidx.annotation.Nullable;
import androidx.annotation.NonNull;

public final class RudderTyperUtils {
    protected static Map<String, Object> rudderTyperCtx;

    static {
        rudderTyperCtx = new HashMap<>();
        rudderTyperCtx.put("sdk", "{{sdk}}");
        rudderTyperCtx.put("language", "{{language}}");
        rudderTyperCtx.put("rudderTyperVersion", "{{rudderTyperVersion}}");
        rudderTyperCtx.put("trackingPlanId", "{{trackingPlanId}}");
        rudderTyperCtx.put("trackingPlanVersion", "{{trackingPlanVersion}}");
    }

    protected static RudderOption addRudderTyperContext(final @NonNull RudderOption options){
        options.putCustomContext("ruddertyper", rudderTyperCtx);

        return options;
    }

    protected static RudderOption addRudderTyperContext(){
        RudderOption rudderTyperContext = new RudderOption();
        rudderTyperContext.putCustomContext("ruddertyper", rudderTyperCtx);

        return rudderTyperContext;
    }

    protected static List<?> serializeList(final @Nullable List<?> props){
        if (props == null) {
            return props;
        }

        List<Object> p = new ArrayList<>();
        for(Object item : props) {
            if (item instanceof List) {
                p.add(serializeList((List<?>) item));
            } else if(item instanceof SerializableProperties) {
                p.add(((SerializableProperties) item).toRudderProperty());
            } else {
                p.add(item);
            }
        }

        return p;
    }
}
